{"ast":null,"code":"import { createStore } from \"redux\"; //type\n\nconst USERADD = \"USERADD\";\nconst USERCHECK = \"USERCHECK\"; //action creater\n\nconst userAdd = (userId, userPwd, userName) => {\n  return {\n    type: USERADD,\n    userId,\n    userPwd,\n    userName\n  };\n};\n\nconst userCheck = (userId, userPwd) => {\n  return {\n    type: USERCHECK,\n    userId,\n    userPwd\n  };\n}; //reducer\n\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case USERADD:\n      return [...state, {\n        userId: action.userid,\n        userPwd: action.userPwd,\n        userName: action.userName\n      }];\n\n    case USERCHECK:\n      return state.filter(toDo => toDo.id !== action.id);\n\n    default:\n      return state;\n  }\n}; //store\n\n\nconst AuthStore = createStore(reducer);\nexport const actionCreater = {\n  userAdd,\n  userCheck\n};\nexport default AuthStore;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/redux-Study/src/AuthStore.js"],"names":["createStore","USERADD","USERCHECK","userAdd","userId","userPwd","userName","type","userCheck","reducer","state","action","userid","filter","toDo","id","AuthStore","actionCreater"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,SAAS,GAAG,WAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,KAA+B;AAC7C,SAAO;AACLC,IAAAA,IAAI,EAAEN,OADD;AAELG,IAAAA,MAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAPD;;AASA,MAAME,SAAS,GAAG,CAACJ,MAAD,EAASC,OAAT,KAAqB;AACrC,SAAO;AACLE,IAAAA,IAAI,EAAEL,SADD;AAELE,IAAAA,MAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKN,OAAL;AACE,aAAO,CACL,GAAGS,KADE,EAEL;AACEN,QAAAA,MAAM,EAAEO,MAAM,CAACC,MADjB;AAEEP,QAAAA,OAAO,EAAEM,MAAM,CAACN,OAFlB;AAGEC,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AAHnB,OAFK,CAAP;;AAQF,SAAKJ,SAAL;AACE,aAAOQ,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACI,EAAxC,CAAP;;AACF;AACE,aAAOL,KAAP;AAbJ;AAeD,CAhBD,C,CAkBA;;;AACA,MAAMM,SAAS,GAAGhB,WAAW,CAACS,OAAD,CAA7B;AAEA,OAAO,MAAMQ,aAAa,GAAG;AAC3Bd,EAAAA,OAD2B;AAE3BK,EAAAA;AAF2B,CAAtB;AAIP,eAAeQ,SAAf","sourcesContent":["import { createStore } from \"redux\";\n\n//type\nconst USERADD = \"USERADD\";\nconst USERCHECK = \"USERCHECK\";\n\n//action creater\nconst userAdd = (userId, userPwd, userName) => {\n  return {\n    type: USERADD,\n    userId,\n    userPwd,\n    userName,\n  };\n};\n\nconst userCheck = (userId, userPwd) => {\n  return {\n    type: USERCHECK,\n    userId,\n    userPwd,\n  };\n};\n\n//reducer\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case USERADD:\n      return [\n        ...state,\n        {\n          userId: action.userid,\n          userPwd: action.userPwd,\n          userName: action.userName,\n        },\n      ];\n    case USERCHECK:\n      return state.filter(toDo => toDo.id !== action.id);\n    default:\n      return state;\n  }\n};\n\n//store\nconst AuthStore = createStore(reducer);\n\nexport const actionCreater = {\n  userAdd,\n  userCheck,\n};\nexport default AuthStore;\n"]},"metadata":{},"sourceType":"module"}