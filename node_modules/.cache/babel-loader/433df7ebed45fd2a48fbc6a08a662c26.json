{"ast":null,"code":"import { createStore } from \"redux\"; //type\n\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\"; //action creater\n\nconst addToDo = text => {\n  return {\n    type: ADD,\n    text\n  };\n};\n\nconst deleteToDo = id => {\n  return {\n    type: DELETE,\n    id\n  };\n}; //reducer\n\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [...state, {\n        text: action.text,\n        id: Date.now()\n      }];\n\n    case DELETE:\n      console.log(action.id);\n      return state.filter(toDo => toDo !== action.id);\n\n    default:\n      return state;\n  }\n}; //store\n\n\nconst store = createStore(reducer);\nexport const actionCreater = {\n  addToDo,\n  deleteToDo\n};\nexport default store;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/redux-Study/src/store.js"],"names":["createStore","ADD","DELETE","addToDo","text","type","deleteToDo","id","reducer","state","action","Date","now","console","log","filter","toDo","store","actionCreater"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf,C,CAEA;;AACA,MAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,GADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAME,UAAU,GAAGC,EAAE,IAAI;AACvB,SAAO;AACLF,IAAAA,IAAI,EAAEH,MADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKJ,GAAL;AACE,aAAO,CAAC,GAAGQ,KAAJ,EAAW;AAAEL,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAAf;AAAqBG,QAAAA,EAAE,EAAEI,IAAI,CAACC,GAAL;AAAzB,OAAX,CAAP;;AACF,SAAKV,MAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACH,EAAnB;AACA,aAAOE,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAKN,MAAM,CAACH,EAArC,CAAP;;AACF;AACE,aAAOE,KAAP;AAPJ;AASD,CAVD,C,CAYA;;;AACA,MAAMQ,KAAK,GAAGjB,WAAW,CAACQ,OAAD,CAAzB;AAEA,OAAO,MAAMU,aAAa,GAAG;AAC3Bf,EAAAA,OAD2B;AAE3BG,EAAAA;AAF2B,CAAtB;AAIP,eAAeW,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\n//type\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\n//action creater\nconst addToDo = text => {\n  return {\n    type: ADD,\n    text,\n  };\n};\n\nconst deleteToDo = id => {\n  return {\n    type: DELETE,\n    id,\n  };\n};\n\n//reducer\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [...state, { text: action.text, id: Date.now() }];\n    case DELETE:\n      console.log(action.id);\n      return state.filter(toDo => toDo !== action.id);\n    default:\n      return state;\n  }\n};\n\n//store\nconst store = createStore(reducer);\n\nexport const actionCreater = {\n  addToDo,\n  deleteToDo,\n};\nexport default store;\n"]},"metadata":{},"sourceType":"module"}