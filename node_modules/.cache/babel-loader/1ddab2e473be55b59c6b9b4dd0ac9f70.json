{"ast":null,"code":"import { createStore } from \"redux\"; //type\n\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\"; //action creater\n\nconst addToDo = text => {\n  return {\n    type: ADD,\n    text\n  };\n};\n\nconst deleteToDo = id => {\n  return {\n    type: DELETE,\n    id\n  };\n}; //reducer\n\n\nconst reducer = (state = [\"hi\", \"hello\"], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE:\n      return state.filter(toDo => toDo !== action.id);\n\n    default:\n      return state;\n  }\n}; //store\n\n\nconst store = createStore(reducer);\nexport const actionCreater = {\n  addToDo,\n  deleteToDo\n};\nexport default store;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/redux-Study/src/store.js"],"names":["createStore","ADD","DELETE","addToDo","text","type","deleteToDo","id","reducer","state","action","Date","now","filter","toDo","store","actionCreater"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf,C,CAEA;;AACA,MAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,GADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAME,UAAU,GAAGC,EAAE,IAAI;AACvB,SAAO;AACLF,IAAAA,IAAI,EAAEH,MADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAC,IAAD,EAAO,OAAP,CAAT,EAA0BC,MAA1B,KAAqC;AACnD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKJ,GAAL;AACE,aAAO,CAAC;AAAEG,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAAf;AAAqBG,QAAAA,EAAE,EAAEI,IAAI,CAACC,GAAL;AAAzB,OAAD,EAAwC,GAAGH,KAA3C,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOO,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAKJ,MAAM,CAACH,EAArC,CAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD,C,CAWA;;;AACA,MAAMM,KAAK,GAAGf,WAAW,CAACQ,OAAD,CAAzB;AAEA,OAAO,MAAMQ,aAAa,GAAG;AAC3Bb,EAAAA,OAD2B;AAE3BG,EAAAA;AAF2B,CAAtB;AAIP,eAAeS,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\n//type\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\n//action creater\nconst addToDo = text => {\n  return {\n    type: ADD,\n    text,\n  };\n};\n\nconst deleteToDo = id => {\n  return {\n    type: DELETE,\n    id,\n  };\n};\n\n//reducer\nconst reducer = (state = [\"hi\", \"hello\"], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{ text: action.text, id: Date.now() }, ...state];\n    case DELETE:\n      return state.filter(toDo => toDo !== action.id);\n    default:\n      return state;\n  }\n};\n\n//store\nconst store = createStore(reducer);\n\nexport const actionCreater = {\n  addToDo,\n  deleteToDo,\n};\nexport default store;\n"]},"metadata":{},"sourceType":"module"}